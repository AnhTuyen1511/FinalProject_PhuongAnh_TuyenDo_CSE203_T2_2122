/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import entity.Book;
import entity.BookBill;
import java.awt.CardLayout;
import java.awt.FlowLayout;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ComponentListener;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.image.BufferedImage;
import java.awt.image.ImageFilter;
import java.awt.print.PrinterException;
import java.io.File;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

import manager.BookManager;

import tableModel.BookTableModel;

/**
 *
 * @author phuon
 */
public class Admin extends javax.swing.JFrame {

    private BookManager myBookManager;

    ArrayList<BookBill> bookBillList;

    /**
     * Creates new form Admin
     */
    public Admin() {
        initComponents();
        myBookManager = new BookManager();

        this.panelAddBook.setVisible(false);
        this.panelUpdateBook.setVisible(false);
        this.panelBill.setVisible(false);
        doShow();
        this.addListener();
        bookBillList = new ArrayList<>();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popupMenu = new javax.swing.JPopupMenu();
        edit = new javax.swing.JMenuItem();
        delete = new javax.swing.JMenuItem();
        addToBill = new javax.swing.JMenuItem();
        jButton1 = new javax.swing.JButton();
        panelTable = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblBook = new javax.swing.JTable();
        panelSearch = new javax.swing.JPanel();
        btnSearch = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        cmbxSearch = new javax.swing.JComboBox<>();
        panelOption = new javax.swing.JPanel();
        panelAddBook = new javax.swing.JPanel();
        lblID = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        lblAuthor = new javax.swing.JLabel();
        lblLanguage = new javax.swing.JLabel();
        lblType = new javax.swing.JLabel();
        lblYear = new javax.swing.JLabel();
        lblQuantity = new javax.swing.JLabel();
        lblPrice = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtTitle = new javax.swing.JTextField();
        txtLanguage = new javax.swing.JTextField();
        cmbxType = new javax.swing.JComboBox<>();
        txtYear = new javax.swing.JTextField();
        txtQuantity = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        BtnClear = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnAddPicture = new javax.swing.JButton();
        txtAuthor = new javax.swing.JTextField();
        panelUpdateBook = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        lblID1 = new javax.swing.JLabel();
        lblTitle1 = new javax.swing.JLabel();
        lblAuthor1 = new javax.swing.JLabel();
        txtID1 = new javax.swing.JTextField();
        txtTitle1 = new javax.swing.JTextField();
        txtLanguage1 = new javax.swing.JTextField();
        lblLanguage1 = new javax.swing.JLabel();
        lblType1 = new javax.swing.JLabel();
        cmbxType1 = new javax.swing.JComboBox<>();
        lblYear1 = new javax.swing.JLabel();
        txtYear1 = new javax.swing.JTextField();
        lblQuantity1 = new javax.swing.JLabel();
        txtQuantity1 = new javax.swing.JTextField();
        lblPrice1 = new javax.swing.JLabel();
        txtPrice1 = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        txtAuthor1 = new javax.swing.JTextField();
        btnUpdatePicture = new javax.swing.JButton();
        panelBill = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaBill = new javax.swing.JTextArea();
        lblTitleBill = new javax.swing.JLabel();
        txtTitleBill = new javax.swing.JTextField();
        lblQuantityBill = new javax.swing.JLabel();
        lblPriceBill = new javax.swing.JLabel();
        txtPriceBill = new javax.swing.JTextField();
        spinnerQuantity = new javax.swing.JSpinner();
        btnAddToBill = new javax.swing.JButton();
        btnClearBill = new javax.swing.JButton();
        btnPrint = new javax.swing.JButton();
        panelInfo = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        lblPicture = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtInfo = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        itemAdd = new javax.swing.JMenuItem();
        itemRestore = new javax.swing.JMenuItem();
        itemBackUp = new javax.swing.JMenuItem();
        itemReFresh = new javax.swing.JMenuItem();

        edit.setText("edit");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });
        popupMenu.add(edit);

        delete.setText("delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        popupMenu.add(delete);

        addToBill.setText("add to bill");
        addToBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToBillActionPerformed(evt);
            }
        });
        popupMenu.add(addToBill);

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Book Shop");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        panelTable.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tblBook.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID ", "Title ", "Author", "Language", "Type", "Year of Release", "Quantity", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblBook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblBookMouseReleased(evt);
            }
        });
        tblBook.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblBookKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(tblBook);

        jScrollPane3.setViewportView(jScrollPane2);

        javax.swing.GroupLayout panelTableLayout = new javax.swing.GroupLayout(panelTable);
        panelTable.setLayout(panelTableLayout);
        panelTableLayout.setHorizontalGroup(
            panelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
        );
        panelTableLayout.setVerticalGroup(
            panelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        panelSearch.setBackground(new java.awt.Color(222, 184, 135));
        panelSearch.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnSearch.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSearchKeyTyped(evt);
            }
        });

        cmbxSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "Title", "Author", "Language", "Type" }));

        javax.swing.GroupLayout panelSearchLayout = new javax.swing.GroupLayout(panelSearch);
        panelSearch.setLayout(panelSearchLayout);
        panelSearchLayout.setHorizontalGroup(
            panelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSearchLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(cmbxSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(154, 154, 154))
        );
        panelSearchLayout.setVerticalGroup(
            panelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSearchLayout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(panelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearch)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbxSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        panelOption.setBackground(new java.awt.Color(222, 184, 135));
        panelOption.setPreferredSize(new java.awt.Dimension(350, 539));
        panelOption.setLayout(new java.awt.CardLayout());

        panelAddBook.setBackground(new java.awt.Color(222, 184, 135));
        panelAddBook.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panelAddBook.setMinimumSize(new java.awt.Dimension(350, 434));
        panelAddBook.setPreferredSize(new java.awt.Dimension(288, 600));
        panelAddBook.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblID.setText("ID:");
        panelAddBook.add(lblID, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 43, 63, -1));

        lblTitle.setText("Title:");
        panelAddBook.add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 84, 63, -1));

        lblAuthor.setText("Author:");
        panelAddBook.add(lblAuthor, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 127, 63, -1));

        lblLanguage.setText("Language:");
        panelAddBook.add(lblLanguage, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, -1, -1));

        lblType.setText("Type:");
        panelAddBook.add(lblType, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, 34, -1));

        lblYear.setText("Year:");
        panelAddBook.add(lblYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, 34, -1));

        lblQuantity.setText("Quantity:");
        panelAddBook.add(lblQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, 51, -1));

        lblPrice.setText("Price:");
        panelAddBook.add(lblPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 360, 34, -1));
        panelAddBook.add(txtID, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, 211, -1));
        panelAddBook.add(txtTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 80, 211, -1));
        panelAddBook.add(txtLanguage, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 160, 211, -1));

        cmbxType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Horror", "Novel", "Comedy", "Detective", "Fiction", "Fairy Tail", "Economic", "Law", "Science", "Biology", "Comic" }));
        panelAddBook.add(cmbxType, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 210, 96, -1));

        txtYear.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtYearKeyPressed(evt);
            }
        });
        panelAddBook.add(txtYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 260, 206, -1));

        txtQuantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtQuantityKeyTyped(evt);
            }
        });
        panelAddBook.add(txtQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 310, 206, -1));

        txtPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPriceKeyTyped(evt);
            }
        });
        panelAddBook.add(txtPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 360, 206, -1));

        btnAdd.setText("Add");
        panelAddBook.add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 450, 73, -1));

        BtnClear.setText("Clear");
        panelAddBook.add(BtnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 450, 73, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Add Book To Store");
        panelAddBook.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 8, 169, 26));

        btnAddPicture.setText("Add Picture");
        btnAddPicture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPictureActionPerformed(evt);
            }
        });
        panelAddBook.add(btnAddPicture, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 410, -1, -1));
        panelAddBook.add(txtAuthor, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 120, 211, -1));

        panelOption.add(panelAddBook, "card2");

        panelUpdateBook.setBackground(new java.awt.Color(222, 184, 135));
        panelUpdateBook.setForeground(new java.awt.Color(222, 184, 135));
        panelUpdateBook.setMinimumSize(new java.awt.Dimension(350, 480));
        panelUpdateBook.setPreferredSize(new java.awt.Dimension(324, 434));
        panelUpdateBook.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Edit Book");
        panelUpdateBook.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 8, 169, 26));

        lblID1.setText("ID:");
        panelUpdateBook.add(lblID1, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 43, 63, -1));

        lblTitle1.setText("Title:");
        panelUpdateBook.add(lblTitle1, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 84, 63, -1));

        lblAuthor1.setText("Author:");
        panelUpdateBook.add(lblAuthor1, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 127, 63, -1));

        txtID1.setEditable(false);
        panelUpdateBook.add(txtID1, new org.netbeans.lib.awtextra.AbsoluteConstraints(113, 40, 211, -1));
        panelUpdateBook.add(txtTitle1, new org.netbeans.lib.awtextra.AbsoluteConstraints(113, 81, 211, -1));
        panelUpdateBook.add(txtLanguage1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 170, 211, -1));

        lblLanguage1.setText("Language:");
        panelUpdateBook.add(lblLanguage1, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 166, -1, -1));

        lblType1.setText("Type:");
        panelUpdateBook.add(lblType1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, 34, -1));

        cmbxType1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Horror", "Novel", "Comedy", "Detective", "Fiction", "Fairy Tail", "Economic", "Law", "Science", "Biology", "Comic" }));
        panelUpdateBook.add(cmbxType1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 210, 96, -1));

        lblYear1.setText("Year:");
        panelUpdateBook.add(lblYear1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, 34, -1));

        txtYear1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtYear1KeyPressed(evt);
            }
        });
        panelUpdateBook.add(txtYear1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 250, 206, -1));

        lblQuantity1.setText("Quantity:");
        panelUpdateBook.add(lblQuantity1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, 51, -1));

        txtQuantity1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtQuantity1KeyTyped(evt);
            }
        });
        panelUpdateBook.add(txtQuantity1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 290, 206, -1));

        lblPrice1.setText("Price:");
        panelUpdateBook.add(lblPrice1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 330, 34, -1));

        txtPrice1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPrice1KeyTyped(evt);
            }
        });
        panelUpdateBook.add(txtPrice1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 330, 206, -1));

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        panelUpdateBook.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 420, 73, -1));
        panelUpdateBook.add(txtAuthor1, new org.netbeans.lib.awtextra.AbsoluteConstraints(113, 124, 211, -1));

        btnUpdatePicture.setText("Update Picture");
        btnUpdatePicture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdatePictureActionPerformed(evt);
            }
        });
        panelUpdateBook.add(btnUpdatePicture, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 380, -1, -1));

        panelOption.add(panelUpdateBook, "card3");

        panelBill.setBackground(new java.awt.Color(222, 184, 135));
        panelBill.setForeground(new java.awt.Color(222, 184, 135));
        panelBill.setMinimumSize(new java.awt.Dimension(350, 480));
        panelBill.setPreferredSize(new java.awt.Dimension(324, 434));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Bill");

        txtAreaBill.setEditable(false);
        txtAreaBill.setColumns(20);
        txtAreaBill.setRows(5);
        txtAreaBill.setText("===============BOOK SHOP=================\nTITLE\tQUANTITY\t         PRICE\t            TOTAL  \n------------------------------------------------------------------------------");
        txtAreaBill.setEnabled(false);
        jScrollPane1.setViewportView(txtAreaBill);

        lblTitleBill.setText("Title:");

        txtTitleBill.setEditable(false);

        lblQuantityBill.setText("Quantity:");

        lblPriceBill.setText("Price:");

        txtPriceBill.setEditable(false);

        btnAddToBill.setText("ADD");
        btnAddToBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddToBillActionPerformed(evt);
            }
        });

        btnClearBill.setText("New");
        btnClearBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearBillActionPerformed(evt);
            }
        });

        btnPrint.setText("Print");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelBillLayout = new javax.swing.GroupLayout(panelBill);
        panelBill.setLayout(panelBillLayout);
        panelBillLayout.setHorizontalGroup(
            panelBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBillLayout.createSequentialGroup()
                .addGroup(panelBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(panelBillLayout.createSequentialGroup()
                        .addGroup(panelBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelBillLayout.createSequentialGroup()
                                .addGroup(panelBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelBillLayout.createSequentialGroup()
                                        .addGap(40, 40, 40)
                                        .addGroup(panelBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblPriceBill, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblTitleBill, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(36, 36, 36))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBillLayout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(lblQuantityBill, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)))
                                .addGroup(panelBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(spinnerQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(panelBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelBillLayout.createSequentialGroup()
                                            .addComponent(txtPriceBill, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(btnAddToBill, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(txtTitleBill, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(panelBillLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(panelBillLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(btnClearBill, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelBillLayout.setVerticalGroup(
            panelBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBillLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTitleBill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTitleBill))
                .addGap(18, 18, 18)
                .addGroup(panelBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spinnerQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblQuantityBill))
                .addGap(18, 18, 18)
                .addGroup(panelBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPriceBill)
                    .addComponent(txtPriceBill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddToBill))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panelBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClearBill)
                    .addComponent(btnPrint))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        panelOption.add(panelBill, "card3");

        panelInfo.setBackground(new java.awt.Color(222, 184, 135));
        panelInfo.setForeground(new java.awt.Color(222, 184, 135));
        panelInfo.setMinimumSize(new java.awt.Dimension(350, 480));
        panelInfo.setPreferredSize(new java.awt.Dimension(324, 434));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Information");

        txtInfo.setEditable(false);
        txtInfo.setBackground(new java.awt.Color(222, 184, 135));
        txtInfo.setColumns(20);
        txtInfo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtInfo.setRows(5);
        txtInfo.setEnabled(false);
        jScrollPane4.setViewportView(txtInfo);

        javax.swing.GroupLayout panelInfoLayout = new javax.swing.GroupLayout(panelInfo);
        panelInfo.setLayout(panelInfoLayout);
        panelInfoLayout.setHorizontalGroup(
            panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelInfoLayout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblPicture, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelInfoLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11))))
        );
        panelInfoLayout.setVerticalGroup(
            panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInfoLayout.createSequentialGroup()
                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelInfoLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelInfoLayout.createSequentialGroup()
                        .addContainerGap(30, Short.MAX_VALUE)
                        .addComponent(lblPicture, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        panelOption.add(panelInfo, "card3");

        jMenuBar1.setBackground(new java.awt.Color(255, 255, 255));

        menuFile.setText("File");

        itemAdd.setText("Add");
        itemAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemAddActionPerformed(evt);
            }
        });
        menuFile.add(itemAdd);

        itemRestore.setText("Restore");
        itemRestore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemRestoreActionPerformed(evt);
            }
        });
        menuFile.add(itemRestore);

        itemBackUp.setText("Save");
        itemBackUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemBackUpActionPerformed(evt);
            }
        });
        menuFile.add(itemBackUp);

        itemReFresh.setText("Refresh");
        itemReFresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemReFreshActionPerformed(evt);
            }
        });
        menuFile.add(itemReFresh);

        jMenuBar1.add(menuFile);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelOption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(panelOption, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(panelSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void itemReFreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemReFreshActionPerformed
        reFreshTable();
    }//GEN-LAST:event_itemReFreshActionPerformed

    private void itemRestoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemRestoreActionPerformed
        doRestore();
        reFreshTable();
    }//GEN-LAST:event_itemRestoreActionPerformed

    private void itemBackUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemBackUpActionPerformed
        doBackup();
    }//GEN-LAST:event_itemBackUpActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        fillInData();
        this.panelUpdateBook.setVisible(true);
        this.panelAddBook.setVisible(false);
        this.panelBill.setVisible(false);
        this.panelInfo.setVisible(false);


    }//GEN-LAST:event_editActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        doDelete();
    }//GEN-LAST:event_deleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        if (doValidateUpdate()) {
            doUpdate();

            reFreshTable();
            clearBill();

        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void tblBookMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBookMouseReleased
        if (evt.getButton() == MouseEvent.BUTTON1) {
            fillInFo();
            this.panelInfo.setVisible(true);

            this.panelUpdateBook.setVisible(false);
            this.panelAddBook.setVisible(false);
            this.panelBill.setVisible(false);

        }
        if (evt.getButton() == MouseEvent.BUTTON3) {
            if (evt.isPopupTrigger() && tblBook.getSelectedRowCount() != 0) {
                popupMenu.show(evt.getComponent(), evt.getX(), evt.getY());
            }

        }
    }//GEN-LAST:event_tblBookMouseReleased

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        doSearch();
    }//GEN-LAST:event_btnSearchActionPerformed

    private void itemAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemAddActionPerformed

        this.panelUpdateBook.setVisible(false);
        this.panelBill.setVisible(false);
        this.panelInfo.setVisible(false);
        doClear();
        panelAddBook.setVisible(true);


    }//GEN-LAST:event_itemAddActionPerformed

    private void addToBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToBillActionPerformed
        this.panelBill.setVisible(true);
        panelUpdateBook.setVisible(false);
        panelAddBook.setVisible(false);
        this.panelInfo.setVisible(false);
        fillInTitleandPrice();


    }//GEN-LAST:event_addToBillActionPerformed

    private void btnAddToBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddToBillActionPerformed
        clearBill();
        fillInBill();

        reFreshTable();
    }//GEN-LAST:event_btnAddToBillActionPerformed

    private void txtSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.doSearch();

        }
    }//GEN-LAST:event_txtSearchKeyPressed

    private void txtSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyTyped
        doSearch();
    }//GEN-LAST:event_txtSearchKeyTyped

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        int exit = JOptionPane.showConfirmDialog(this, "Data may not be saved, do you want to save and exit?", "Notification", JOptionPane.YES_NO_OPTION);
        if (exit == JOptionPane.YES_OPTION) {
            doBackup();
            System.exit(0);
        } else if (exit == JOptionPane.NO_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_formWindowClosing

    private void btnClearBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearBillActionPerformed
        doDeleteBookBill();
        clearBill();
    }//GEN-LAST:event_btnClearBillActionPerformed

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        try {
            this.txtAreaBill.print();
        } catch (PrinterException ex) {

        }
        clearBill();
    }//GEN-LAST:event_btnPrintActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {

                int exit = JOptionPane.showConfirmDialog(null, "Data may not be saved, do you want to save and exit?", "Notification", JOptionPane.YES_NO_OPTION);
                if (exit == JOptionPane.YES_OPTION) {
                    doBackup();
                    System.exit(0);
                } else if (exit == JOptionPane.NO_OPTION) {
                    System.exit(0);
                }
            }

        });

    }//GEN-LAST:event_formWindowClosed

    private void txtYearKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtYearKeyPressed
        // TODO add your handling code here:
        String year = txtYear.getText();
        int lenght = year.length();
        char c = evt.getKeyChar();
        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9') {
            if (lenght < 4) {
                txtYear.setEditable(true);
            } else {
                txtYear.setEditable(false);
            }
        } else {
            if (evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE) {
                txtYear.setEditable(true);
            } else {
                txtYear.setEditable(false);
            }
        }
    }//GEN-LAST:event_txtYearKeyPressed

    private void txtYear1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtYear1KeyPressed
        // TODO add your handling code here:
        String year1 = txtYear1.getText();
        int lenght = year1.length();
        char c = evt.getKeyChar();
        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9') {
            if (lenght < 4) {
                txtYear1.setEditable(true);
            } else {
                txtYear1.setEditable(false);
            }
        } else {
            if (evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE) {
                txtYear1.setEditable(true);
            } else {
                txtYear1.setEditable(false);
            }
        }
    }//GEN-LAST:event_txtYear1KeyPressed

    private void txtQuantity1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQuantity1KeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtQuantity1KeyTyped

    private void txtPrice1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrice1KeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtPrice1KeyTyped

    private void txtQuantityKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQuantityKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtQuantityKeyTyped

    private void txtPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPriceKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtPriceKeyTyped

    private void btnAddPictureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPictureActionPerformed
        showAddPictureDialog();
    }//GEN-LAST:event_btnAddPictureActionPerformed

    private void btnUpdatePictureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdatePictureActionPerformed
        showUpdatePictureDialog();
    }//GEN-LAST:event_btnUpdatePictureActionPerformed

    private void tblBookKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblBookKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
            doDelete();
        }
    }//GEN-LAST:event_tblBookKeyPressed
    public void addListener() {
        this.tblBook.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {

                if (e.getClickCount() == 2) {
                    fillInData();
                    panelUpdateBook.setVisible(true);
                    panelAddBook.setVisible(false);
                    panelBill.setVisible(false);
                    panelInfo.setVisible(false);

                }
            }

        });

        this.btnAdd.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {

                if (doValidate()) {
                    doAddBook();
                    doClear();
                    reFreshTable();

                }
            }
        });
        this.BtnClear.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                doClear();
            }
        });

    }

    /**
     * @param args the command line arguments
     */
    public void reFreshTable() {
        ArrayList<Book> listBook = this.myBookManager.getListBook();
        BookTableModel tblModel = new BookTableModel(listBook);
        this.tblBook.setModel(tblModel);
    }

    private void doBackup() {
        this.myBookManager.saveByteData();
        this.myBookManager.saveCharData();
    }

    private void doRestore() {
        this.myBookManager.getByteData();

    }

    private void doShow() {
        myBookManager.getByteData();

        reFreshTable();
    }

    public void doDelete() {

        int row = this.tblBook.getSelectedRow();
        int column = this.tblBook.getSelectedColumn();

        BookTableModel bookTableModel = (BookTableModel) this.tblBook.getModel();
        Book selectedBook = (Book) bookTableModel.getObjectAtRow(row);
        String id = selectedBook.getBookID();
        int des = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this Book?", "Delete", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (des == 0) {
            this.myBookManager.deleteBookById(id);
            JOptionPane.showMessageDialog(this, "Delete Successful");
            reFreshTable();
        }
    }

    private void doDeleteBookBill() {

        bookBillList.clear();

    }

    private void doClear() {
        this.txtID.setText("");
        this.txtTitle.setText("");
        this.txtAuthor.setText("");
        this.txtPrice.setText("");
        this.txtYear.setText("");
        this.txtQuantity.setText("");

        this.txtLanguage.setText("");
        this.cmbxType.setSelectedIndex(0);
    }

    private void doAddBook() {
        String id, type, language, title, author;
        float price;
        int year, quantity;
        ImageIcon picture;
        picture = (ImageIcon) this.lblPicture.getIcon();

        author = this.txtAuthor.getText();

        id = this.txtID.getText();
        title = this.txtTitle.getText();

        language = this.txtLanguage.getText();

        {
            type = (String) this.cmbxType.getSelectedItem();

            price = Float.parseFloat(this.txtPrice.getText());
            year = Integer.parseInt(this.txtYear.getText());
            quantity = Integer.parseInt(this.txtQuantity.getText());

            Book newBook = new Book(picture, id, title, author, language, type, year, quantity, price);
            if (this.myBookManager.addBook(newBook)) {
                JOptionPane.showMessageDialog(this, "Successful");
                this.doClear();

            } else {
                JOptionPane.showMessageDialog(this, "Unsuccessful");
            }
        }

    }

    private void doUpdate() {
        String id, title, author, bookLanguage = "", type;
        int year, quantity;
        float price;
        ImageIcon picture;
        picture = (ImageIcon) this.lblPicture.getIcon();

        id = this.txtID1.getText();
        title = this.txtTitle1.getText();
        author = this.txtAuthor1.getText();
        bookLanguage = this.txtLanguage1.getText();
        type = (String) this.cmbxType1.getSelectedItem();
        year = Integer.parseInt(this.txtYear1.getText());
        quantity = Integer.parseInt(this.txtQuantity1.getText());
        price = Float.parseFloat(this.txtPrice1.getText());
        Book editedBook = new Book(picture, id, title, author, bookLanguage, type, year, quantity, price);
        if (this.myBookManager.updateBook(editedBook)) {
            JOptionPane.showMessageDialog(this, "Update Successful");

        }

    }

    private void doSearch() {
        String id, title, author, language, type;

        String inputSearch = this.txtSearch.getText();
        try {
            if (this.cmbxSearch.getSelectedItem() == "ID") {
                id = this.txtSearch.getText();
                ArrayList<Book> listSearchID = this.myBookManager.getListBookByID(id);
                BookTableModel tblModel = new BookTableModel(listSearchID);
                this.tblBook.setModel(tblModel);
            }
        } catch (Exception e) {
            reFreshTable();
        }
        if (this.cmbxSearch.getSelectedItem() == "Language") {
            language = this.txtSearch.getText();
            ArrayList<Book> listSearchLang = this.myBookManager.getListBookByLanguage(language);
            BookTableModel tblModel = new BookTableModel(listSearchLang);
            this.tblBook.setModel(tblModel);

        }
        if (this.cmbxSearch.getSelectedItem() == "Title") {
            title = this.txtSearch.getText();
            ArrayList<Book> listSeachTitle = this.myBookManager.getListBookByTitle(title);
            BookTableModel tblModel = new BookTableModel(listSeachTitle);
            this.tblBook.setModel(tblModel);

        }
        if (this.cmbxSearch.getSelectedItem() == "Author") {
            author = this.txtSearch.getText();
            ArrayList<Book> listSearchAuthor = this.myBookManager.getListBookByAuthor(author);
            BookTableModel tblModel = new BookTableModel(this.myBookManager.getListBookByAuthor(author));
            this.tblBook.setModel(tblModel);

        }

        if (this.cmbxSearch.getSelectedItem() == "Type") {
            type = this.txtSearch.getText();
            BookTableModel tblModel = new BookTableModel(this.myBookManager.getListBookByType(type));
            this.tblBook.setModel(tblModel);

        }

    }

    public String getPicturePath() {
        JFileChooser fileChooser = new JFileChooser();
        FileFilter imageFilter = new FileNameExtensionFilter(
                "Image files", ImageIO.getReaderFileSuffixes());
        fileChooser.setFileFilter(imageFilter);
        int response = fileChooser.showOpenDialog(null);
        File picture = fileChooser.getSelectedFile();

        return picture.getAbsolutePath();

    }

    public void showAddPictureDialog() {

        try {
            String picture = getPicturePath();
            BufferedImage img = null;
            img = ImageIO.read(new File(picture));
            Image img1 = img.getScaledInstance(lblPicture.getWidth(), lblPicture.getHeight(), Image.SCALE_SMOOTH);
            ImageIcon format = new ImageIcon(img1);
            lblPicture.setIcon(format);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Please choose an image!");
        }

    }

    private void showUpdatePictureDialog() {

        JFileChooser fileChooser = new JFileChooser();

        FileFilter imageFilter = new FileNameExtensionFilter(
                "Image files", ImageIO.getReaderFileSuffixes());
        fileChooser.setFileFilter(imageFilter);
        int response = fileChooser.showOpenDialog(null);
        File picture = fileChooser.getSelectedFile();

        try {
            BufferedImage img = null;
            img = ImageIO.read(new File(picture.getAbsolutePath()));
            Image img1 = img.getScaledInstance(lblPicture.getWidth(), lblPicture.getHeight(), Image.SCALE_SMOOTH);
            ImageIcon format = new ImageIcon(img1);
            lblPicture.setIcon(format);
        } catch (Exception ex) {
//            JOptionPane.showMessageDialog(null, "Please choose an image!");
        }

    }

    private void fillInData() {
        int row = this.tblBook.getSelectedRow();

        BookTableModel tblModel = (BookTableModel) this.tblBook.getModel();

        Book editBook = (Book) tblModel.getObjectAtRow(row);

        this.txtID1.setText(editBook.getBookID());
        this.txtTitle1.setText(editBook.getBookTitle());
        this.txtAuthor1.setText(editBook.getBookAuthor());
        this.txtQuantity1.setText(String.valueOf(editBook.getBookQuantity()));
        this.txtPrice1.setText(String.valueOf(editBook.getBookPrice()));
        this.txtYear1.setText(String.valueOf(editBook.getBookYear()));

        this.cmbxType1.setSelectedItem(editBook.getBookType());

        this.txtLanguage1.setText(editBook.getBookLanguage());
    }

    private void fillInTitleandPrice() {
        int stock = 0;
        int row = this.tblBook.getSelectedRow();

        BookTableModel tblModel = (BookTableModel) this.tblBook.getModel();

        this.txtTitleBill.setText(tblModel.getValueAt(row, 1).toString());
        this.txtPriceBill.setText(tblModel.getValueAt(row, 7).toString());

        this.spinnerQuantity.setValue(1);

        this.txtQuantity.setText(tblModel.getValueAt(row, 6).toString());
        this.txtTitle.setText(tblModel.getValueAt(row, 1).toString());
        this.txtID.setText(tblModel.getValueAt(row, 0).toString());

    }

    private void fillInFo() {
        int row = this.tblBook.getSelectedRow();
        DecimalFormat df = new DecimalFormat("###,###,###");
        BookTableModel tblModel = (BookTableModel) this.tblBook.getModel();

        Book choosenBook = (Book) tblModel.getObjectAtRow(row);

        String id = choosenBook.getBookID();
        String title = choosenBook.getBookTitle();
        String author = choosenBook.getBookAuthor();
        String language = choosenBook.getBookLanguage();
        String type = choosenBook.getBookType();
        String year = String.valueOf(choosenBook.getBookYear());
        String quantity = String.valueOf(choosenBook.getBookQuantity());
        float price = choosenBook.getBookPrice();

        ImageIcon picture = choosenBook.getPicture();
        this.lblPicture.setIcon(choosenBook.getPicture());

        this.txtInfo.setText("Title: \t" + title + "\n" + "Author: \t" + author + "\n" + "Language: \t" + language + "\n" + "Type: \t" + type + "\n"
                + "Year: \t" + year + "\n" + "Price: \t" + df.format(price));

    }

    private void fillInBill() {

        float total;
        DecimalFormat df = new DecimalFormat("###,###,###");
        Book toGetBook = myBookManager.getBookbyId(this.txtID.getText());

        String newId = toGetBook.getBookID();
        String newTitle = toGetBook.getBookTitle();
        String newAuthor = toGetBook.getBookAuthor();
        String newlanguage = toGetBook.getBookLanguage();
        String newType = toGetBook.getBookType();
        Float newPrice = toGetBook.getBookPrice();
        int oldQuantity = toGetBook.getBookQuantity();
        int newYear = toGetBook.getBookYear();
        ImageIcon picture;
        picture = (ImageIcon) this.lblPicture.getIcon();

        int quantityBill = (Integer) this.spinnerQuantity.getValue();

        if ((quantityBill <= 0)) {
            JOptionPane.showMessageDialog(this, "Wrong Input!");
        } else if (quantityBill > oldQuantity || oldQuantity == 0) {
            JOptionPane.showMessageDialog(this, "Not enough books in stock");
        } else {
            int newQuantity = oldQuantity - quantityBill;
            myBookManager.updateBook(new Book(picture, newId, newTitle, newAuthor, newlanguage, newType, newYear, newQuantity, newPrice));
            total = toGetBook.totalPrice(quantityBill);
            //String newTitlePrint = this.txtTitle.getText();
            StringBuilder sb = new StringBuilder();
            bookBillList.add(new BookBill(newTitle, total, newPrice, quantityBill));
            float bigTotal = 0;
            for (int i = 0; i < bookBillList.size(); i++) {
                BookBill b = bookBillList.get(i);
                bigTotal += b.getTotal();
                sb.append(b.getTitlePrintBill()).append("          ").append(b.getQuantityBill()).append("                 ").append(df.format(b.getPrice())).append("                   ").append(df.format(b.getTotal())).append("\n");
            }
            sb.append("\n").append("Total Bill: ").append(df.format(bigTotal));
            this.txtAreaBill.setText(txtAreaBill.getText() + "\n " + sb);

        }
    }

    private void clearBill() {
        Date date = new Date();
        this.txtAreaBill.setText(
                "\t \t" + date + "\n"
                + "===============BOOK SHOP=================\n"
                + "TITLE	QUANTITY	         PRICE	            TOTAL  \n"
                + "------------------------------------------------------------------------------");
    }

    private boolean doValidate() {
        boolean isValid = true;
        if (this.txtID.getText().length() == 0) {
            isValid = false;
            JOptionPane.showMessageDialog(this, "ID can not be blank");
        } else if (this.txtTitle.getText().length() == 0) {
            isValid = false;
            JOptionPane.showMessageDialog(this, "Title can not be blank");
        } else if (this.txtAuthor.getText().length() == 0) {
            isValid = false;
            JOptionPane.showMessageDialog(this, "Author can not be blank");
        } else if (this.txtPrice.getText().length() == 0) {
            isValid = false;
            JOptionPane.showMessageDialog(this, "Price can not be blank");
        } else if (this.txtQuantity.getText().length() == 0) {
            isValid = false;
            JOptionPane.showMessageDialog(this, "Quantity can not be blank");
        } else if (this.txtYear.getText().length() == 0) {
            isValid = false;
            JOptionPane.showMessageDialog(this, "Year can not be blank");
        } else if (lblPicture.getIcon() == null) {
            isValid = false;
            JOptionPane.showMessageDialog(this, "Please insert the picture!");
        }

        return isValid;
    }

    private boolean doValidateUpdate() {
        boolean isValid = true;
        if (this.txtID1.getText().length() == 0) {
            isValid = false;
            JOptionPane.showMessageDialog(this, "ID can not be blank");
        } else if (this.txtTitle1.getText().length() == 0) {
            isValid = false;
            JOptionPane.showMessageDialog(this, "Title can not be blank");
        } else if (this.txtAuthor1.getText().length() == 0) {
            isValid = false;
            JOptionPane.showMessageDialog(this, "Author can not be blank");
        } else if (this.txtPrice1.getText().length() == 0) {
            isValid = false;
            JOptionPane.showMessageDialog(this, "Price can not be blank");
        } else if (this.txtQuantity1.getText().length() == 0) {
            isValid = false;
            JOptionPane.showMessageDialog(this, "Quantity can not be blank");
        } else if (this.txtYear1.getText().length() == 0) {
            isValid = false;
            JOptionPane.showMessageDialog(this, "Year can not be blank");
        }
        return isValid;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnClear;
    private javax.swing.JMenuItem addToBill;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAddPicture;
    private javax.swing.JButton btnAddToBill;
    private javax.swing.JButton btnClearBill;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUpdatePicture;
    private javax.swing.JComboBox<String> cmbxSearch;
    private javax.swing.JComboBox<String> cmbxType;
    private javax.swing.JComboBox<String> cmbxType1;
    private javax.swing.JMenuItem delete;
    private javax.swing.JMenuItem edit;
    private javax.swing.JMenuItem itemAdd;
    private javax.swing.JMenuItem itemBackUp;
    private javax.swing.JMenuItem itemReFresh;
    private javax.swing.JMenuItem itemRestore;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblAuthor;
    private javax.swing.JLabel lblAuthor1;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblID1;
    private javax.swing.JLabel lblLanguage;
    private javax.swing.JLabel lblLanguage1;
    private javax.swing.JLabel lblPicture;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel lblPrice1;
    private javax.swing.JLabel lblPriceBill;
    private javax.swing.JLabel lblQuantity;
    private javax.swing.JLabel lblQuantity1;
    private javax.swing.JLabel lblQuantityBill;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTitle1;
    private javax.swing.JLabel lblTitleBill;
    private javax.swing.JLabel lblType;
    private javax.swing.JLabel lblType1;
    private javax.swing.JLabel lblYear;
    private javax.swing.JLabel lblYear1;
    private javax.swing.JMenu menuFile;
    private javax.swing.JPanel panelAddBook;
    private javax.swing.JPanel panelBill;
    private javax.swing.JPanel panelInfo;
    private javax.swing.JPanel panelOption;
    private javax.swing.JPanel panelSearch;
    private javax.swing.JPanel panelTable;
    private javax.swing.JPanel panelUpdateBook;
    private javax.swing.JPopupMenu popupMenu;
    private javax.swing.JSpinner spinnerQuantity;
    private javax.swing.JTable tblBook;
    private javax.swing.JTextArea txtAreaBill;
    private javax.swing.JTextField txtAuthor;
    private javax.swing.JTextField txtAuthor1;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtID1;
    private javax.swing.JTextArea txtInfo;
    private javax.swing.JTextField txtLanguage;
    private javax.swing.JTextField txtLanguage1;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtPrice1;
    private javax.swing.JTextField txtPriceBill;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JTextField txtQuantity1;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtTitle;
    private javax.swing.JTextField txtTitle1;
    private javax.swing.JTextField txtTitleBill;
    private javax.swing.JTextField txtYear;
    private javax.swing.JTextField txtYear1;
    // End of variables declaration//GEN-END:variables
}
